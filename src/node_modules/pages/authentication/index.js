import {useState, useEffect, useContext} from 'react'
import React from 'react';
import {Link} from 'react-router-dom';
import useFetch from 'hooks/useFetch';
import useLocalStorage from 'hooks/useLocalStorage';
import {CurrentUserContext} from '../../contexts/currentUser'

import './index.css'
const Authentication = (props) => {
    const isLogin= props.match.path === '/authentication'
    const pageTitle= isLogin ? 'Sign In' : 'Sign Up'
    const pageDesc = isLogin ? 'Need an account' : 'Have an account';
    const descLink = isLogin ? '/register' : '/authentication';
    const descBtn = isLogin ? 'Sign In' : 'Sign Up';
    const apiUrl = isLogin ? 'users/login' : 'users'
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [userName, setUserName] = useState('')
    const [{isLoading, response, error}, doFetch] = useFetch(apiUrl)
    const [token, setToken] = useLocalStorage('token')
    const [currentUser, setCurrentUser] = useContext(CurrentUserContext)
    function handleSubmit(e){
        e.preventDefault()
        const user = isLogin ? {email, password} : {userName, email, password}
        doFetch({
                method: 'get',
                data: {
                    user
                }
            })
        }
        useEffect(()=> {
            setToken('kartika')
            setCurrentUser(state=> ({
                ...state,
                isLoading: false,
                isLogin: true,
                response: response
            }))
        }, [setToken])

    return (<div className= 'login'>
        <div className= 'container'>
            <div className = 'row'>
                <div className = 'authenticate'>
                <h3>{pageTitle}</h3>
                <Link to = {descLink}>{pageDesc}</Link>
                </div>
            </div>
            <form onSubmit= {(e)=> {handleSubmit(e)}}>
                <fieldset className = 'form-detail form-group'>
                    {!isLogin &&
                        <input type= 'text' name= 'username' className= 'form-control' placeholder= 'Username' onChange= {(e)=> { setUserName(e.target.value) }}/>
                     }
                    <input type= 'email' name= 'email' className= 'form-control' placeholder= 'email' onChange= {(e)=> { setEmail(e.target.value) }}/>
                    <input type= 'password' name= 'password' className= 'form-control' placeholder= 'password'
                    onChange = {(e)=> setPassword(e.target.value)}
                    />
                    <button 
                    disabled= {isLoading}
                    className= 'btn-primary' 
                    type= 'submit'>
                    {descBtn}
                    </button>
                </fieldset>
            </form>
        </div>
    </div>)
}
export default Authentication